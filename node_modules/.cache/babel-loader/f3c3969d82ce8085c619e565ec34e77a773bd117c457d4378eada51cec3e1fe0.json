{"ast":null,"code":"var _jsxFileName = \"E:\\\\arhive\\\\sell-building-react\\\\src\\\\pages\\\\Categories.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropertyCard from \"../components/categories/PropertyCard\";\nimport data from \"../data/properties.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULTS = {\n  minPrice: 0,\n  maxPrice: 100000,\n  minSize: 0,\n  maxSize: 500\n};\nexport const Categories = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [filteredProperties, setFilteredProperties] = useState([]);\n  const [visibleCount, setVisibleCount] = useState(6);\n  const [filters, setFilters] = useState({\n    transaction: \"\",\n    propertyType: \"\",\n    searchTerm: \"\",\n    minPrice: DEFAULTS.minPrice,\n    maxPrice: DEFAULTS.maxPrice,\n    minSize: DEFAULTS.minSize,\n    maxSize: DEFAULTS.maxSize,\n    selectedAmenities: [],\n    sortValue: \"newest\"\n  });\n  useEffect(() => {\n    // якщо імпортуєш data напряму\n    const updated = data.map(p => ({\n      ...p,\n      amenities: p.amenities || []\n    }));\n    setProperties(updated);\n    setFilteredProperties(updated);\n  }, []);\n  useEffect(() => {\n    filterProperties();\n  }, [filters, properties]);\n  const filterProperties = () => {\n    let result = properties.filter(property => {\n      // твій фільтр тут...\n      // ...\n      return true; // для тесту просто показати всі\n    });\n\n    // сортування та ін.\n\n    setFilteredProperties(result);\n    setVisibleCount(6);\n  };\n  const handleLoadMore = () => {\n    setVisibleCount(prev => prev + 6);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"properties-list\",\n      children: filteredProperties.slice(0, visibleCount).map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n        property: property\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), visibleCount < filteredProperties.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"load-more-btn\",\n        onClick: handleLoadMore,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"3HLVrHtEDAchGueXTWmkS6cwR+A=\");\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useEffect","useState","PropertyCard","data","jsxDEV","_jsxDEV","DEFAULTS","minPrice","maxPrice","minSize","maxSize","Categories","_s","properties","setProperties","filteredProperties","setFilteredProperties","visibleCount","setVisibleCount","filters","setFilters","transaction","propertyType","searchTerm","selectedAmenities","sortValue","updated","map","p","amenities","filterProperties","result","filter","property","handleLoadMore","prev","className","children","slice","id","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["E:/arhive/sell-building-react/src/pages/Categories.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropertyCard from \"../components/categories/PropertyCard\";\r\nimport data from \"../data/properties.json\";\r\nimport { Property, Filters } from \"../types/Property\";\r\n\r\nconst DEFAULTS = {\r\n  minPrice: 0,\r\n  maxPrice: 100000,\r\n  minSize: 0,\r\n  maxSize: 500,\r\n};\r\n\r\nexport const Categories: React.FC = () => {\r\n  const [properties, setProperties] = useState<Property[]>([]);\r\n  const [filteredProperties, setFilteredProperties] = useState<Property[]>([]);\r\n  const [visibleCount, setVisibleCount] = useState(6);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    transaction: \"\",\r\n    propertyType: \"\",\r\n    searchTerm: \"\",\r\n    minPrice: DEFAULTS.minPrice,\r\n    maxPrice: DEFAULTS.maxPrice,\r\n    minSize: DEFAULTS.minSize,\r\n    maxSize: DEFAULTS.maxSize,\r\n    selectedAmenities: [],\r\n    sortValue: \"newest\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // якщо імпортуєш data напряму\r\n    const updated = data.map((p) => ({\r\n      ...p,\r\n      amenities: p.amenities || [],\r\n    }));\r\n    setProperties(updated);\r\n    setFilteredProperties(updated);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterProperties();\r\n  }, [filters, properties]);\r\n\r\n  const filterProperties = () => {\r\n    let result = properties.filter((property) => {\r\n      // твій фільтр тут...\r\n      // ...\r\n      return true; // для тесту просто показати всі\r\n    });\r\n\r\n    // сортування та ін.\r\n\r\n    setFilteredProperties(result);\r\n    setVisibleCount(6);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setVisibleCount((prev) => prev + 6);\r\n  };\r\n\r\n  return (\r\n    <main className=\"main-content\">\r\n      <div className=\"properties-list\">\r\n        {filteredProperties.slice(0, visibleCount).map((property) => (\r\n          <PropertyCard key={property.id} property={property} />\r\n        ))}\r\n      </div>\r\n      {visibleCount < filteredProperties.length && (\r\n        <div className=\"load-more-wrapper\">\r\n          <button className=\"load-more-btn\" onClick={handleLoadMore}>\r\n            Load More\r\n          </button>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}