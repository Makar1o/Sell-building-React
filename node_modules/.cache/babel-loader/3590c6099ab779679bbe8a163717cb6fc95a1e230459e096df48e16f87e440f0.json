{"ast":null,"code":"var _jsxFileName = \"E:\\\\arhive\\\\sell-building-react\\\\src\\\\components\\\\authorization\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    const {\n      data,\n      error\n    } = isLogin ? await supabase.auth.signInWithPassword({\n      email,\n      password\n    }) : await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isLogin ? \"No account?\" : \"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsLogin(!isLogin),\n        children: isLogin ? \"Register here\" : \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"w2tK7+Qqs9zwWjguWbSbSzJXsKE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","supabase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isLogin","setIsLogin","error","setError","navigate","handleSubmit","e","preventDefault","data","auth","signInWithPassword","signUp","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["E:/arhive/sell-building-react/src/components/authorization/Login.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { supabase } from \"../../utils/supabaseClient\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    const { data, error } = isLogin\r\n      ? await supabase.auth.signInWithPassword({ email, password })\r\n      : await supabase.auth.signUp({ email, password });\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>{isLogin ? \"Login\" : \"Register\"}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\r\n      </form>\r\n      <p>\r\n        {isLogin ? \"No account?\" : \"Already have an account?\"}{\" \"}\r\n        <button type=\"button\" onClick={() => setIsLogin(!isLogin)}>\r\n          {isLogin ? \"Register here\" : \"Login here\"}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}